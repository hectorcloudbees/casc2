#jenkins Configuration        
jenkins:
  agentProtocols:
  - "Diagnostic-Ping"
  - "JNLP4-connect"
  - "OperationsCenter2"
  - "Ping"
  authorizationStrategy: "cloudBeesRoleBasedAccessControl"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: true
  labelAtoms:
  - name: "fortify"
  - name: "master"
  markupFormatter: "plainText"
  mode: EXCLUSIVE
  myViewsTabBar: "standard"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm: "operationsCenter"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "core-mm-offline"
      url: "file:/tmp/jenkins/war/WEB-INF/plugins/update-center.json"
    - id: "cap-core-mm"
      url: "https://jenkins-updates.cloudbees.com/update-center/envelope-core-mm/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
beekeeper:
  enabled: true
  securityWarnings:
    enabledForCore: true
    enabledForPlugins: true
  upgrades:
    autoDowngradePlugins: false
    autoUpgradePlugins: false
notificationConfiguration:
  enabled: false
  
#kube configuration
kube:
  podTemplatesConfiguration:
    templates:
    - label: "fortify"
      name: "fortify"
      showRawYaml: false
      yaml: |-
        spec:
              containers:
              - name: fortify
                image: us-docker.pkg.dev/odev-ads-prod-gcr-5292/one-dev/fortify:0.1
                resources:
                  requests:
                    memory: "6144Mi"
                    cpu: "3000m"
                command:
                - cat
                tty: true
                volumeMounts:
                - mountPath: "/opt/license"
                  name: fortify-license
                  readOnly: true
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - /bin/sh
                        - -c
                        - cp /opt/license/fortify.license /opt/Fortify/fortify.license && fortifyupdate
              volumes:
                - name: fortify-license
                  secret:
                    secretName: fortify-license
      yamlMergeStrategy: "merge"
      
security:
  anonymizeSupportBundle:
    enabled: false
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  copyartifact:
    mode: PRODUCTION
  globalJobDslSecurityConfiguration:
    useScriptSecurity: true
  sSHD:
    port: -1

#unclassified section
unclassified:
  ansiColorBuildWrapper:
    colorMaps:
    - black: "#000000"
      blackB: "#4C4C4C"
      blue: "#1E90FF"
      blueB: "#4682B4"
      cyan: "#00CDCD"
      cyanB: "#00FFFF"
      green: "#00CD00"
      greenB: "#00FF00"
      magenta: "#CD00CD"
      magentaB: "#FF00FF"
      name: "xterm"
      red: "#CD0000"
      redB: "#FF0000"
      white: "#E5E5E5"
      whiteB: "#FFFFFF"
      yellow: "#CDCD00"
      yellowB: "#FFFF00"
    - black: "#000000"
      blackB: "#555555"
      blue: "#0000AA"
      blueB: "#5555FF"
      cyan: "#00AAAA"
      cyanB: "#55FFFF"
      defaultBackground: 0
      defaultForeground: 7
      green: "#00AA00"
      greenB: "#55FF55"
      magenta: "#AA00AA"
      magentaB: "#FF55FF"
      name: "vga"
      red: "#AA0000"
      redB: "#FF5555"
      white: "#AAAAAA"
      whiteB: "#FFFFFF"
      yellow: "#AA5500"
      yellowB: "#FFFF55"
    - black: "black"
      blackB: "black"
      blue: "blue"
      blueB: "blue"
      cyan: "cyan"
      cyanB: "cyan"
      green: "green"
      greenB: "green"
      magenta: "magenta"
      magentaB: "magenta"
      name: "css"
      red: "red"
      redB: "red"
      white: "white"
      whiteB: "white"
      yellow: "yellow"
      yellowB: "yellow"
    - black: "#2E3436"
      blackB: "#2E3436"
      blue: "#3465A4"
      blueB: "#3465A4"
      cyan: "#06989A"
      cyanB: "#06989A"
      defaultBackground: 0
      defaultForeground: 7
      green: "#4E9A06"
      greenB: "#4E9A06"
      magenta: "#75507B"
      magentaB: "#75507B"
      name: "gnome-terminal"
      red: "#CC0000"
      redB: "#CC0000"
      white: "#D3D7CF"
      whiteB: "#D3D7CF"
      yellow: "#C4A000"
      yellowB: "#C4A000"
  artifactManager:
    artifactManagerFactories:
    - "jSync"
    
  artifactoryBuilder:
    jfrogPipelinesServer:
      bypassProxy: false
      connectionRetries: 3
      credentialsConfig:
        ignoreCredentialPluginDisabled: true
        overridingCredentials: false
        password: ""
        username: ""
      timeout: 300
    useCredentialsPlugin: false
  
  audit-trail:
    logBuildCause: true
    pattern: ".*/(?:configSubmit|doDelete|postBuildResult|enable|disable|cancelQueue|stop|toggleLogKeep|doWipeOutWorkspace|createItem|createView|toggleOffline|cancelQuietDown|quietDown|restart|exit|safeExit)/?.*"
  bitbucketEndpointConfiguration:
    endpoints:
    - bitbucketCloudEndpoint:
        enableCache: false
        manageHooks: false
        repositoriesCacheDuration: 0
        teamCacheDuration: 0
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  buildStepOperation:
    enabled: false
  cloudBeesSCMReporting:
    enabled: true
  defaultFolderConfiguration:
    healthMetrics:
    - worstChildHealthMetric:
        recursive: true
    - "averageChildHealthMetric"
    - jobStatusHealthMetric:
        countVirginJobs: false
        failure: true
        success: true
        unbuilt: true
        unstable: true
    - "projectEnabledHealthMetric"
    - "primaryBranchHealthMetric"
  dependencyTrackPublisher:
    dependencyTrackAutoCreateProjects: false
    dependencyTrackConnectionTimeout: 0
    dependencyTrackPollingInterval: 10
    dependencyTrackPollingTimeout: 5
    dependencyTrackReadTimeout: 0
  
  #extended email configuration
  email-ext:
    adminRequiredForTemplateTesting: false
    allowUnregisteredEnabled: false
    allowedDomains: "@team.neustar"
    charset: "UTF-8"
    debugMode: false
    defaultBody: |-
      $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

      Check console output at $BUILD_URL to view the results.
    defaultContentType: "text/plain"
    defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
    defaultTriggerIds:
    - "hudson.plugins.emailext.plugins.trigger.FailureTrigger"
    mailAccount:
      smtpHost: "smartmail.neustar.com"
      #smtpPassword: "{AQAAABAAAAAQVzvU2FUXoOVynjNjrLWUDKnByE0++xmslVKGMp1SZ5k=}"
    maxAttachmentSize: -1
    maxAttachmentSizeMb: -1
    precedenceBulk: false
    watchingEnabled: false
  experimentalPlugins:
    enabled: false
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  #gitHubPluginConfig:
  #  hookUrl: "https://jenkins.onedev.neustar.biz/market-sol-dev/github-webhook/"
 
  gitSCM:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  globalConfigFiles:
    configs:
    - globalMavenSettings:
        comment: "Global settings for Nexus deployed on AWS"
        content: |-
          <?xml version="1.0" encoding="UTF-8"?>
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <mirrors>
              <mirror>
                <!--This sends everything else to /public -->
                <id>nexus</id>
                <mirrorOf>*</mirrorOf>
                <!-- https://repo.nexgen.neustar.biz/nexus/content/groups/public -->
                <url>https://repo.nexgen.neustar.biz/nexus/content/groups/public</url>
              </mirror>
            </mirrors>
            <servers>
            </servers>
            <profiles>
              <profile>
                <id>nexus</id>
                <properties>
                  <service.repo.url>https://repo.nexgen.neustar.biz/nexus/content/repositories/services</service.repo.url>
                  <release.repo.url>https://repo.nexgen.neustar.biz/nexus/content/repositories/releases</release.repo.url>
                  <snapshot.repo.url>https://repo.nexgen.neustar.biz/nexus/content/repositories/snapshots</snapshot.repo.url>
                </properties>
                <!--Enable snapshots for the built in central repo to direct -->
                <!--all requests to nexus via the mirror -->
                <repositories>
                  <repository>
                    <id>central</id>
                    <url>http://central</url>
                    <releases>
                      <enabled>true</enabled>
                      <updatePolicy>always</updatePolicy>
                    </releases>
                    <snapshots>
                      <enabled>true</enabled>
                      <updatePolicy>always</updatePolicy>
                    </snapshots>
                  </repository>
                </repositories>
               <pluginRepositories>
                  <pluginRepository>
                    <id>central</id>
                    <url>http://central</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                  </pluginRepository>
                </pluginRepositories>
              </profile>
            </profiles>
            <activeProfiles>
              <!--make the profile active all the time -->
              <activeProfile>nexus</activeProfile>
            </activeProfiles>
          </settings>
        id: "NeustarNexusGlobalSettings"
        isReplaceAll: true
        name: "NeustarNexusGlobalSettings"
        providerId: "org.jenkinsci.plugins.configfiles.maven.GlobalMavenSettingsConfig"
        serverCredentialMappings:
        - credentialsId: "aws-nexus-credentials"
          serverId: "nexus"
  globalNexusConfiguration:
    instanceId: "2fd3c100b0d84db59d146b0ff963ab67"
  hashicorpVault:
    configuration:
      engineVersion: 2
      timeout: 60
  ivyBuildTrigger:
    extendedVersionMatching: false

  junitTestResultStorage:
    storage: "file"
  
  location:
    adminAddress: "OneDev Jenkins Notifications <odev.jenkins.notify@team.neustar>"

  mailer:
    charset: "UTF-8"
    smtpHost: "smartmail.neustar.com"
    useSsl: false
    useTls: false
  mavenModuleSet:
    localRepository: "default"
  
  naginatorPublisher:
    regexpTimeoutMs: 30000

  pollSCM:
    pollingThreadCount: 10
  robotConfig:
    buildsToShowInResultsColumn: 15
    robotResultsColumnEnabled: true
    xAxisLabelFormat: "#$build"
  
  #sonarQube global configuration
  sonarGlobalConfiguration:
    buildWrapperEnabled: true
    installations:
    - credentialsId: "sonarqube-authtoken"
      name: "SonarQube"
      serverUrl: "http://10.125.76.2:9000/sonarqube"
      triggers:
        skipScmCause: false
        skipUpstreamCause: false

  splunkJenkinsInstallation:
    enabled: false
    globalPipelineFilter: true
    maxEventsBatchSize: 262144
    metadataHost: "jenkins.onedev.neustar.biz"
    port: 8088
    rawEventEnabled: true
    retriesOnError: 3
    scriptContent: |-
      //send job metadata and junit reports with page size set to 50 (each event contains max 50 test cases)
      splunkins.sendTestReport(50)
      //send coverage, each event contains max 50 class metrics
      splunkins.sendCoverageReport(50)
      //send all logs from workspace to splunk, with each file size limits to 10MB
      splunkins.archive("**/*.log", null, false, "10MB")

      //end
    useSSL: true
  
  #Need to remove this, As encrypted password for one jenkins instance may not work on another jenkins instance  
  #sshPublisher:
  #  commonConfig:
  #    disableAllExec: false
  #    encryptedPassphrase: "{AQAAABAAAAAQU9ecZbuBY0bzGNWb/wl4nDSvYgPPQvkp7xKp+xOw9Zw=}"

  subversionSCM:
    workspaceFormat: 8
  
  # templating engine configuration
  templateGlobalConfig:
    tier:
      configurationProvider:
        scm:
          scm:
            git:
              branches:
              - name: "*/dev"
              buildChooser: "default"
              doGenerateSubmoduleConfigurations: false
              userRemoteConfigs:
              - credentialsId: "jenkins-gitlab"
                url: "ssh://git@git.nexgen.neustar.biz:8022/onedev/ads/jenkins/pass/pipeline-template-factory.git"
      librarySources:
      - libraryProvider:
          scm:
            baseDir: "libraries"
            scm:
              git:
                branches:
                - name: "*/dev"
                buildChooser: "default"
                doGenerateSubmoduleConfigurations: false
                userRemoteConfigs:
                - credentialsId: "jenkins-gitlab"
                  url: "ssh://git@git.nexgen.neustar.biz:8022/onedev/ads/jenkins/pass/library-module-factory.git"
  
  timestamper:
    allPipelines: false
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
  upstream:
    globalUpstreamFilterStrategy: UseOldest
  usageStatisticsCloudBees:
    usageStatisticsCollected: true
  validatedMergeGlobalConfiguration:
    preferHttp: false
    pushFromMaster: false

# Tools Configurations
tool:
  cloudbeesPluginUsageAnalyzer:
    enabled: true
  dependency-check:
    installations:
    - name: "Default"
      properties:
      - installSource:
          installers:
          - dependencyCheckInstaller:
              id: "6.1.1"
  git:
    installations:
    - home: "git"
      name: "Default"
  sonarRunnerInstallation:
    installations:
    - name: "sonar_scanner"
      properties:
      - installSource:
          installers:
          - sonarRunnerInstaller:
              id: "4.6.0.2311"